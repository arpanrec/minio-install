---
- name: Minio | MC | Create Password
  ansible.builtin.set_fact:
      minio_mc_admin_user_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=40,
          chars=['ascii_letters', 'digits']) }}"

- name: Minio | MC | Get Admin User
  ansible.builtin.command:
      cmd: "/usr/local/bin/mc admin user info minio admin-{{ inventory_hostname }}"
  register: minio_tmp_mc_admin_user_exists
  changed_when: false
  failed_when: |+
      minio_tmp_mc_admin_user_exists.rc != 0
      and
      minio_tmp_mc_admin_user_exists.stderr !=
        'mc: <ERROR> Unable to get user info. The specified user does not exist. (Specified user does not exist).'

- name: Minio | MC | Delete Existing Admin User
  ansible.builtin.command:
      cmd: "/usr/local/bin/mc admin user rm minio admin-{{ inventory_hostname }}"
  changed_when: true
  when: minio_tmp_mc_admin_user_exists.rc == 0

- name: Minio | MC | Create Admin User
  ansible.builtin.command:
      cmd: "/usr/local/bin/mc admin user add minio admin-{{ inventory_hostname }} {{ minio_mc_admin_user_password }}"
  changed_when: true

- name: Minio | MC | Create replication service account
  ansible.builtin.command:
      cmd: "/usr/local/bin/mc admin user svcacct add \
          --name replication \
          minio admin-{{ inventory_hostname }} --json"
  changed_when: true
  register: minio_mc_replication_service_account

- name: Minio | MC | Write Admin User Password to Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: "minio/servers/{{ inventory_hostname }}/admin-user"
      engine_mount_point: "secret"
      data:
          user: "admin-{{ inventory_hostname }}"
          password: "{{ minio_mc_admin_user_password }}"
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: Minio | MC | Set Facts
  ansible.builtin.set_fact:
      access_key: "{{ minio_mc_replication_service_account.stdout | from_json | json_query('accessKey') }}"
      secret_key: "{{ minio_mc_replication_service_account.stdout | from_json | json_query('secretKey') }}"

- name: Minio | MC | Write replication keys account to Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: "minio/servers/{{ inventory_hostname }}/replication-service-account"
      engine_mount_point: "secret"
      data:
          access_key: "{{ access_key }}"
          secret_key: "{{ secret_key }}"
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"
