---
- name: KES | Install | Create group
  ansible.builtin.group:
      name: "{{ minio_kes_group }}"
      state: present
      system: true
  register: minio_kes_tmp_group_creation

- name: KES | Install | Create User
  ansible.builtin.user:
      name: "{{ minio_kes_user }}"
      group: "{{ minio_kes_group }}"
      state: present
      create_home: false
      system: true
      shell: /bin/false
  register: minio_kes_tmp_user_creation

- name: KES | Install | Create Directories
  ansible.builtin.file:
      path: "{{ minio_kes_home }}"
      state: directory
      owner: "{{ minio_kes_user }}"
      group: "{{ minio_kes_group }}"
      mode: "0777"

- name: KES | Install | Download binary
  ansible.builtin.get_url:
      dest: "/usr/local/bin/kes"
      mode: "0755"
      owner: root
      group: root
      checksum: "sha256:{{ minio_kes_bin_info_map[ansible_architecture]['sha256sum'][minio_kes_version] }}"
      url: "https://github.com/minio/kes/releases/download/{{ minio_kes_version }}/kes-linux\
          -{{ minio_kes_bin_info_map[ansible_architecture]['minio_kes_arch'] }}"

- name: KES | Install | Server Certificate
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: pki/issue/server_certificate
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
      data:
          common_name: "{{ inventory_hostname }}"
          alt_names: "{{ minio_kes_hostnames | join(',') }}"
          ip_sans: "{{ minio_kes_ips | join(',') }}"
  register: minio_kes_tmp_server_cert
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: KES | Install | Write Server Certificate
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
      mode: "0777"
  loop:
      - content: "{{ minio_kes_tmp_server_cert.data.data.certificate }}\n\
            {{ minio_kes_tmp_server_cert.data.data.ca_chain | join('\n') }}"
        dest: "{{ minio_kes_server_cert }}"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_group }}"
      - content: "{{ minio_kes_tmp_server_cert.data.data.private_key }}"
        dest: "{{ minio_kes_server_key }}"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_group }}"
      - content: "{{ minio_kes_tmp_server_cert.data.data.ca_chain | join('\n') }}"
        dest: "{{ minio_kes_server_ca }}"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_group }}"

- name: KES | Install | Admin Client Certificate
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: pki/issue/client_certificate
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
      data:
          common_name: "{{ inventory_hostname }}"
          alt_names: "{{ minio_kes_hostnames | join(',') }}"
          ip_sans: "{{ minio_kes_ips | join(',') }}"
  register: kes_tmp_admin_client_cert_res
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: KES | Install | Write Admin Client Certificate
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
      mode: "0777"
  loop:
      - content: "{{ kes_tmp_admin_client_cert_res.data.data.certificate }}\n\
            {{ kes_tmp_admin_client_cert_res.data.data.ca_chain | join('\n') }}"
        dest: "/tmp/kes-admin-client-cert.pem"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_user }}"
      # - content: "{{ kes_tmp_admin_client_cert_res.data.data.private_key }}"
      #   dest: "/tmp/kes-admin-client-cert.key"
      #   owner: "{{ minio_kes_user }}"
      #   group: "{{ minio_kes_group }}"
      # - content: "{{ kes_tmp_admin_client_cert_res.data.data.ca_chain | join('\n') }}"
      #   dest: "/tmp/kes-admin-client-ca.pem"
      #   owner: "{{ minio_kes_user }}"
      #   group: "{{ minio_kes_group }}"

- name: KES | Install | Vault Client Certificate
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: pki/issue/vault_client_certificate
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
      data:
          common_name: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url | urlsplit('hostname') }}"
  register: kes_tmp_vault_client_cert
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: KES | Install | Write Vault Client Certificate
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
      mode: "0777"
  loop:
      - content: "{{ kes_tmp_vault_client_cert.data.data.certificate }}\n\
            {{ kes_tmp_vault_client_cert.data.data.ca_chain | join('\n') }}"
        dest: "{{ minio_kes_vault_client_cert }}"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_group }}"
      - content: "{{ kes_tmp_vault_client_cert.data.data.private_key }}"
        dest: "{{ minio_kes_vault_client_key }}"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_group }}"
      - content: "{{ kes_tmp_vault_client_cert.data.data.ca_chain | join('\n') }}"
        dest: "{{ minio_kes_vault_ca_cert }}"
        owner: "{{ minio_kes_user }}"
        group: "{{ minio_kes_group }}"

- name: KES | Install | Get Admin Key Id
  ansible.builtin.command:
      cmd: "/usr/local/bin/kes identity of /tmp/kes-admin-client-cert.pem"
  register: minio_kes_tmp_admin_key_id
  changed_when: false

- name: KES | Install | Remove Temp Files
  ansible.builtin.file:
      path: "/tmp/kes-admin-client-cert.pem"
      state: absent

- name: KES | Install | Get role-id
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_read:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: auth/approle/role/minio-kes/role-id
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
  register: minio_kes_tmp_vault_role_id
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: KES | Install | Get secret-id
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: "auth/approle/role/minio-kes/secret-id"
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
  register: minio_kes_tmp_vault_secret_id
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: KES | Install | Save KES Admin Key Id into Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: "minio/kes/servers/{{ inventory_hostname }}/config"
      engine_mount_point: "secret"
      data:
          admin_cert: "{{ kes_tmp_admin_client_cert_res.data.data.certificate }}\n\
              {{ kes_tmp_admin_client_cert_res.data.data.ca_chain | join('\n') }}"
          admin_key: "{{ kes_tmp_admin_client_cert_res.data.data.private_key }}"
          admin_ca: "{{ kes_tmp_admin_client_cert_res.data.data.ca_chain | join('\n') }}"
          ips: "{{ minio_kes_ips }}"
          port: "{{ minio_kes_port }}"
          hostnames: "{{ minio_kes_hostnames }}"
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: KES | Install | Create Config
  ansible.builtin.set_fact:
      minio_kes_config:
          version: v1
          address: "0.0.0.0:{{ minio_kes_port }}"
          tls:
              key: "{{ minio_kes_server_key }}"
              cert: "{{ minio_kes_server_cert }}"
              auth: "on"
              ca: "{{ minio_kes_server_ca }}"
          admin:
              identity: "{{ minio_kes_tmp_admin_key_id.stdout }}"
          log:
              error: "on"
              audit: "on"
          api:
              "/v1/ready":
                  skip_auth: false
                  timeout: 15s
          policy:
              minio:
                  allow:
                      - /v1/key/create/*
                      - /v1/key/generate/*
                      - /v1/key/decrypt/*
                      - /v1/key/bulk/decrypt
                      - /v1/key/list/*
                      - /v1/status
                      - /v1/metrics
                      - /v1/log/audit
                      - /v1/log/error
          keystore:
              vault:
                  endpoint: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
                  engine: "kv"
                  version: "v1"
                  prefix: "minio/kes/kms"
                  approle:
                      id: "{{ minio_kes_tmp_vault_role_id.data.data.role_id }}"
                      secret: "{{ minio_kes_tmp_vault_secret_id.data.data.secret_id }}"
                  tls:
                      key: "{{ minio_kes_vault_client_key }}"
                      cert: "{{ minio_kes_vault_client_cert }}"
                      ca: "{{ minio_kes_vault_ca_cert }}"
                  status:
                      ping: 10s

- name: KES | Install | Write Config
  ansible.builtin.copy:
      content: "---\n{{ minio_kes_config | to_nice_yaml(sort_keys=false) }}"
      dest: "{{ minio_kes_config_file }}"
      owner: "{{ minio_kes_user }}"
      group: "{{ minio_kes_group }}"
      mode: "0777"

- name: KES | Install | Create Systemd Service
  ansible.builtin.template:
      src: "templates/{{ minio_kes_systemd_service_name }}.j2"
      dest: "/etc/systemd/system/{{ minio_kes_systemd_service_name }}"
      owner: root
      group: root
      mode: "0644"

- name: KES | Install | Enable UFW
  community.general.ufw:
      rule: allow
      port: "{{ minio_kes_port }}"
      proto: tcp
      state: enabled

- name: KES | Install | Start Systemd Service
  ansible.builtin.systemd_service:
      name: "{{ minio_kes_systemd_service_name }}"
      state: restarted
      daemon_reload: true
      daemon_reexec: true
      enabled: true
