---
- name: Minio | Uninstall | Stop Systemd Service
  ansible.builtin.systemd_service:
      name: "{{ minio_server_systemd_service_name }}"
      state: stopped
      daemon_reload: true
      daemon_reexec: true
      enabled: false
      force: true
  register: minio_server_systemd_service_removed
  failed_when: |+
      minio_server_systemd_service_removed.failed
      and
      minio_server_systemd_service_removed.msg.find('Could not find the requested service') == -1

- name: Minio | Uninstall | Remove UFW
  community.general.ufw:
      rule: reject
      port: "{{ item }}"
      proto: tcp
      state: enabled
  loop:
      - "{{ minio_server_port }}"
      - "{{ minio_server_console_port }}"

- name: Minio | Uninstall | Remove Files
  ansible.builtin.file:
      path: "{{ item }}"
      state: absent
      force: true
  loop:
      - "/etc/systemd/system/{{ minio_server_systemd_service_name }}"
      - "/usr/local/bin/minio"
      - "/usr/local/bin/mc"
      - "{{ minio_env_file }}"
      - "{{ minio_server_certs_dir }}"
      - "{{ minio_mc_config_dir }}"

- name: Minio | Uninstall | Delete User
  ansible.builtin.user:
      name: "{{ minio_server_user }}"
      state: absent
      force: true

- name: Minio | Uninstall | Delete group
  ansible.builtin.group:
      name: "{{ minio_server_group }}"
      state: absent
      force: true

- name: Minio | Uninstall | Remove data directory
  when: minio_server_uninstall_remove_data_dir is defined and minio_server_uninstall_remove_data_dir | bool
  ansible.builtin.file:
      path: "{{ minio_server_data_dir }}"
      state: absent
      force: true

- name: Minio | Uninstall | Destroy the Password in Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  ansible.builtin.uri:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}/v1/secret/metadata/minio/clusters/\
          {{ minio_cluster_name }}/servers/{{ inventory_hostname }}/config"
      method: DELETE
      status_code: 204
      headers:
          X-Vault-Token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
      ca_path: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      client_cert: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      client_key: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"
