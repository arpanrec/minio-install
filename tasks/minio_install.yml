---
- name: Minio | Install | Gather Facts
  ansible.builtin.setup:

- name: Minio | Install | Create group
  ansible.builtin.group:
      name: "{{ minio_server_group }}"
      state: present
      system: true
  register: minio_server_tmp_group_creation

- name: Minio | Install | Create User
  ansible.builtin.user:
      name: "{{ minio_server_user }}"
      group: "{{ minio_server_group }}"
      state: present
      create_home: false
      system: true
      shell: /bin/false
  register: minio_server_tmp_user_creation

- name: Minio | Install | Download binary
  ansible.builtin.get_url:
      dest: "/usr/local/bin/minio"
      mode: "0755"
      owner: root
      group: root
      checksum: "sha256:{{ minio_server_bin_info_map[ansible_architecture]['sha256sum'][minio_server_version] }}"
      url: "https://dl.min.io/server/minio/release/linux-\
          {{ minio_server_bin_info_map[ansible_architecture]['minio_server_arch'] }}/archive/minio.\
          {{ minio_server_version }}"

- name: Minio | Install | Download mc
  ansible.builtin.get_url:
      dest: "/usr/local/bin/mc"
      mode: "0755"
      owner: root
      group: root
      checksum: "sha256:{{ minio_mc_bin_info_map[ansible_architecture]['sha256sum'][minio_mc_version] }}"
      url: "https://dl.min.io/client/mc/release/linux-\
          {{ minio_mc_bin_info_map[ansible_architecture]['minio_server_arch'] }}/archive/mc.\
          {{ minio_mc_version }}"

- name: Minio | Install | Create Directories
  ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: "{{ minio_server_user }}"
      group: "{{ minio_server_group }}"
      mode: "0777"
  loop:
      - "{{ minio_server_certs_dir }}"
      - "{{ minio_server_certs_dir }}/CAs"
      - "{{ minio_server_data_dir }}"
      - "{{ minio_mc_config_dir }}/certs/CAs"

- name: Minio | Install | Get Minio Server Certificates from Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: pki/issue/server_certificate
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
      data:
          common_name: "{{ inventory_hostname }}"
          alt_names: "{{ minio_server_hostnames | join(',') }}"
          ip_sans: "{{ minio_server_ips | join(',') }}"
  register: minio_server_tmp_certificate
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: Minio | Install | Write Server Certificates
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ minio_server_user }}"
      group: "{{ minio_server_group }}"
      mode: "0777"
  loop:
      - content: "{{ minio_server_tmp_certificate.data.data.certificate }}\n\
            {{ minio_server_tmp_certificate.data.data.ca_chain | join('\n') }}"
        dest: "{{ minio_server_cert }}"
      - content: "{{ minio_server_tmp_certificate.data.data.private_key }}"
        dest: "{{ minio_server_key }}"
      - content: "{{ minio_server_tmp_certificate.data.data.ca_chain | join('\n') }}"
        dest: "{{ minio_server_ca }}"

- name: Minio | Install | Write KES Client Admin Certificates
  ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ minio_server_user }}"
      group: "{{ minio_server_group }}"
      mode: "0777"
  loop:
      - content: "{{ minio_server_kes_secret_dict.secret.admin_cert }}\n"
        dest: "{{ minio_server_kes_client_cert }}"
      - content: "{{ minio_server_kes_secret_dict.secret.admin_key }}\n"
        dest: "{{ minio_server_kes_client_key }}"
      - content: "{{ minio_server_kes_secret_dict.secret.admin_ca }}\n"
        dest: "{{ minio_server_kes_client_ca }}"

- name: Minio | Install | Write MC Certificates
  ansible.builtin.copy:
      content: "{{ minio_server_tmp_certificate.data.data.ca_chain | join('\n') }}"
      dest: "{{ minio_mc_config_dir }}/certs/CAs/server-ca.crt"
      owner: "{{ minio_server_user }}"
      group: "{{ minio_server_group }}"
      mode: "0777"

- name: Minio | Install | Create User and Password
  ansible.builtin.set_fact:
      minio_server_root_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=40,
          chars=['ascii_letters', 'digits']) }}"
      minio_server_root_user: "{{ lookup('community.general.random_string', special=false, length=12) }}"

- name: Minio | Install | Write the Password to Vault
  become: false
  delegate_facts: true
  delegate_to: localhost
  community.hashi_vault.vault_kv2_write:
      url: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.url }}"
      path: "minio/clusters/{{ minio_cluster_name }}/servers/{{ inventory_hostname }}/config"
      token: "{{ hashicorp_vault_kv2_inventory.hvac_token }}"
      validate_certs: true
      engine_mount_point: "secret"
      data:
          root_user: "{{ minio_server_root_user }}"
          root_password: "{{ minio_server_root_password }}"
          ips: "{{ minio_server_ips }}"
          hostnames: "{{ minio_server_hostnames }}"
          port: "{{ minio_server_port }}"
          console_port: "{{ minio_server_console_port }}"
          server_version: "{{ minio_server_version }}"
          client_version: "{{ minio_mc_version }}"
  environment:
      VAULT_CACERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.verify }}"
      VAULT_CLIENT_CERT: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[0] }}"
      VAULT_CLIENT_KEY: "{{ hashicorp_vault_kv2_inventory.hvac_client_configuration.cert[1] }}"

- name: Minio | Install | Create Env File
  ansible.builtin.copy:
      content: |+
          MINIO_KMS_KES_ENDPOINT={{ minio_server_kes_endpoint }}
          MINIO_KMS_KES_KEY_FILE={{ minio_server_kes_client_key }}
          MINIO_KMS_KES_CERT_FILE={{ minio_server_kes_client_cert }}
          MINIO_KMS_KES_CAPATH={{ minio_server_kes_client_ca }}
          MINIO_KMS_KES_KEY_NAME=default
          MINIO_ROOT_USER={{ minio_server_root_user }}
          MINIO_ROOT_PASSWORD={{ minio_server_root_password }}
          MINIO_REGION=us-east-1
          MINIO_VOLUMES={{ minio_server_data_dir }}
          MINIO_OPTS="--address ':{{ minio_server_port }}' --console-address ':{{
            minio_server_console_port }}' --certs-dir {{ minio_server_certs_dir }}"
      dest: "{{ minio_env_file }}"
      owner: "{{ minio_server_user }}"
      group: "{{ minio_server_group }}"
      mode: "0777"

- name: Minio | Install | Enable UFW
  community.general.ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
      comment: "Minio Server"
  loop:
      - "{{ minio_server_port }}"
      - "{{ minio_server_console_port }}"

- name: Minio | Install | Create Systemd Service
  ansible.builtin.template:
      src: "templates/{{ minio_server_systemd_service_name }}.j2"
      dest: "/etc/systemd/system/{{ minio_server_systemd_service_name }}"
      owner: root
      group: root
      mode: "0644"

- name: Minio | Install | Start Systemd Service
  ansible.builtin.systemd_service:
      name: "{{ minio_server_systemd_service_name }}"
      state: restarted
      daemon_reload: true
      daemon_reexec: true
      enabled: true

# - name: Minio | Install | Add to localhost
#   delegate_to: localhost
#   become: false
#   ansible.builtin.command:
#       argv:
#           - mc
#           - alias
#           - set
#           - "{{ inventory_hostname }}"
#           - "https://{{ minio_server_preferred_mc_host }}:{{ minio_server_port }}"
#           - "{{ minio_server_root_user }}"
#           - "{{ minio_server_root_password }}"
#   changed_when: true
